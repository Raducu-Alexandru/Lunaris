apiVersion: apps/v1
kind: Deployment
metadata:
  name: cdn
  namespace: lunaris-mcs
  labels:
    app: cdn
spec:
  selector:
    matchLabels:
      app: cdn
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: cdn
    spec:
      containers:
      - name: cdn
        imagePullPolicy: Always # TODO: Change to IfNotPresent in production
        image: raducualexandrumircea/nodejs-ts-mcs-arm64:v1
        # TODO: Changes resources in production
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 1000m
            memory: 1000Mi
        # TODO: Add redinessProbe in production
        #readinessProbe:
        #  httpGet:
        #    path: /health/check
        #    port: 8080
        #  initialDelaySeconds: 10
        #  failureThreshold: 5
        #  periodSeconds: 10
        envFrom:
          - configMapRef:
              name: cdn-configmap
          - secretRef:
              name: shared-secret
          - configMapRef:
              name: shared-configmap
        ports:
        - containerPort: 8080
          name: cdn
        volumeMounts:
        - mountPath: /usr/src/app # TODO: Remove in production
          name: cdn-hostpath
        - mountPath: /static
          name: cdn-static-volume
        - mountPath: /email-templates
          name: email-templates-volume
      volumes:
      - name: cdn-hostpath # TODO: Remove in production
        hostPath:
          path: "/mnt/Users/alexmircea/Desktop/PersonalProjects/Lunaris/dev/mcs/cdn"
          type: Directory
      - name: cdn-static-volume
        persistentVolumeClaim:
          claimName: cdn-static-pvc
      - name: email-templates-volume
        persistentVolumeClaim:
          claimName: email-templates-pvc
      restartPolicy: Always
      imagePullSecrets:
        - name: docker-hub-secret
